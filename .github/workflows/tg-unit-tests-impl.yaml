name: "[internal] TG unit tests impl"

on:
  workflow_call:

jobs:
  TG-UMD-tests:
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          {
            name: "TG UMD unit tests",
            arch: wormhole_b0,
            runs-on: ["arch-wormhole_b0", "config-tg", "in-service", "bare-metal", "pipeline-functional"],
            cmd: "./build/test/umd/galaxy/unit_tests_glx"
          },
        ]
    env:
      ARCH_NAME: ${{ matrix.test-group.arch }}
      LOGURU_LEVEL: INFO
    runs-on: ${{ matrix.test-group.runs-on }}
    steps:
      - uses: tenstorrent/tt-metal/.github/actions/checkout-with-submodule-lfs@main
      - name: Set up dynamic env vars for build
        run: |
          echo "TT_METAL_HOME=$(pwd)" >> $GITHUB_ENV
      - name: Build UMD device and tests
        run: |
          cmake -B build -G Ninja -DTT_UMD_BUILD_TESTS=ON -DCMAKE_TOOLCHAIN_FILE=cmake/x86_64-linux-clang-17-libcpp-toolchain.cmake
          cmake --build build --target umd_tests
      - name: Run UMD unit regression tests
        timeout-minutes: 10
        run: |
          cd $TT_METAL_HOME
          ${{ matrix.test-group.cmd }}
  TG-tests:
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { name: "TG unit tests", arch: wormhole_b0, model: unit, timeout: 30, owner_id: XXXXX},  # Add owner
          { name: "TG Fabric tests", arch: wormhole_b0, model: fabric, timeout: 30, owner_id: UJ45FEC7M},  # Allan Liu
          { name: "TG Llama3-70b unit tests", arch: wormhole_b0, model: llama3-70b, timeout: 45, owner_id: U044T8U8DEF}, # Johanna Rock
          { name: "TG DRAM Prefetcher unit tests", arch: wormhole_b0, model: prefetcher, timeout: 30, owner_id: U071CKL4AFK}, # Ammar Vora, Yu Gao
          { name: "TG distributed ops tests", arch: wormhole_b0, model: distributed-ops, timeout: 15, owner_id: U044T8U8DEF},  # Johanna Rock
          { name: "TG distributed runtime tests", arch: wormhole_b0, model: distributed-runtime, timeout: 45, owner_id: U03NG0A5ND7},  # Aditya Saigal
        ]
    name: ${{ matrix.test-group.name }}
    env:
      ARCH_NAME: ${{ matrix.test-group.arch }}
      LOGURU_LEVEL: INFO
      LD_LIBRARY_PATH: ${{ github.workspace }}/build/lib
      GTEST_OUTPUT: xml:generated/test_reports/
    runs-on:
      - arch-wormhole_b0
      - config-tg
      - in-service
      - bare-metal
      - pipeline-functional
    steps:
      - uses: tenstorrent/tt-metal/.github/actions/checkout-with-submodule-lfs@main
      - name: Set up dynamic env vars for build
        run: |
          echo "TT_METAL_HOME=$(pwd)" >> $GITHUB_ENV
      - uses: actions/download-artifact@v4
        timeout-minutes: 10
        with:
          name: TTMetal_build_any
      - name: Extract files
        run: tar -xvf ttm_any.tar
      - uses: ./.github/actions/install-python-deps
      - name: Run unit regression tests
        timeout-minutes: ${{ matrix.test-group.timeout }}
        run: |
          source ${{ github.workspace }}/python_env/bin/activate
          cd $TT_METAL_HOME
          export PYTHONPATH=$TT_METAL_HOME
          mkdir -p generated/test_reports
          ./tests/scripts/run_tests.sh --tt-arch wormhole_b0 --pipeline-type unit_tg_device --dispatch-mode "" --model ${{ matrix.test-group.model }}
      - uses: ./.github/actions/slack-report
        if: ${{ failure() }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          owner: ${{ matrix.test-group.owner_id }}
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ !cancelled() }}
        with:
          path: |
            generated/test_reports/
          prefix: "test_reports_"
      - name: Generate gtest annotations on failure
        uses: ./.github/actions/generate-gtest-failure-message
        if: ${{ failure() }}
        with:
          path: |
            generated/test_reports/
