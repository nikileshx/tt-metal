name: "metal - Run microbenchmarks"

on:
  schedule:
    - cron: "0 1,15 * * *"
  workflow_dispatch:
  workflow_call:

jobs:
  run-microbenchmarks:
    strategy:
      # Do not fail-fast because we need to ensure all tests go to completion
      # so we try not to get hanging machines
      fail-fast: false
      matrix:
        runner-info: [
          # Do not run N150 on microbenchmarks for now as we do not have the machines for it
          # {arch: wormhole_b0, runs-on: ["pipeline-perf", "N150", "bare-metal", "in-service"]},
          # N300
          {arch: wormhole_b0, runs-on: ["N300", "pipeline-perf", "bare-metal", "in-service"]},
          {arch: wormhole_b0, runs-on: ["N300", "pipeline-perf", "bare-metal", "in-service"], ccl: true},
          # T3000
          {
              name: "T3000 uBenchmark tests",
              arch: wormhole_b0,
              runs-on: ["arch-wormhole_b0", "config-t3000", "pipeline-perf", "in-service"],
              is-t3k: true
          },
        ]
    env:
      # Use BM for microbenchmarks
      ARCH_NAME: ${{ matrix.runner-info.arch }}
      LD_LIBRARY_PATH: ${{ github.workspace }}/build/lib
    runs-on: ${{ matrix.runner-info.runs-on }}
    steps:
      - uses: tenstorrent/tt-metal/.github/actions/checkout-with-submodule-lfs@main
      - name: Set up dynamic env vars for build
        run: |
          echo "TT_METAL_HOME=$(pwd)" >> $GITHUB_ENV
      - name: Build tt-metal and libs
        run: |
          ./build_metal.sh --enable-profiler --build-programming-examples --build-tests
          ./create_venv.sh
      - name: Run microbenchmark tests
        timeout-minutes: 90
        run: |
          PIPELINE_TYPE="microbenchmarks"
          if [ "${{ matrix.runner-info.ccl }}" == "true" ]; then
            PIPELINE_TYPE="ccl_microbenchmarks"
          elif [ "${{ matrix.runner-info.is-t3k }}" == "true" ]; then
            PIPELINE_TYPE="T3K_microbenchmark"
          else
            TT_METAL_SLOW_DISPATCH_MODE=1 ./tests/scripts/run_tunneler_tests.sh --machine-type ${{ matrix.runner-info.runs-on[0] }}
          fi
          ./tests/scripts/run_tests.sh --tt-arch $ARCH_NAME --pipeline-type "$PIPELINE_TYPE"
      - name: Upload microbenchmark report csvs
        uses: actions/upload-artifact@v4
        timeout-minutes: 10
        with:
          name: microbenchmark-report-csv-${{ matrix.runner-info.arch }}
          path: generated/profiler/.logs
